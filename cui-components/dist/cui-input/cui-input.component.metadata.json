[{"__symbolic":"module","version":4,"metadata":{"CuiInputComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"selector":"cui-input","template":"<div class=\"form-group\" [ngClass]=\"{'form-group--helper': options.helperText || errorMessage, 'input--invalid' : error}\" *ngIf=\"type !== 'switch'\"> <div class=\"form-group__text\" *ngIf=\"type !== 'radio' && type !== 'checkbox'\"> <input #inputFocus *ngIf=\"type !== 'number' && type !== 'textarea'\" id=\"input-{{guid}}\" [(ngModel)]=\"model\" [pattern]=\"options.match\" type=\"{{type}}\" [required]=\"options.required\" (ngModelChange)=\"onChange()\"> <input #inputFocus *ngIf=\"type === 'number'\" id=\"input-{{guid}}\" [(ngModel)]=\"model\" [min]=\"options.min\" [max]=\"options.max\" [step]=\"options.step\" type=\"number\" [required]=\"options.required\" (ngModelChange)=\"onChange()\"> <textarea #inputFocus *ngIf=\"type === 'textarea'\" id=\"input-{{guid}}\" [(ngModel)]=\"model\" [pattern]=\"options.match\" [rows]=\"options.rows\" [required]=\"options.required\" (ngModelChange)=\"onChange()\"></textarea> <label for=\"input={{guid}}\" *ngIf=\"label\">{{label}}</label> <div class=\"required-block\" *ngIf=\"options.required\"> <span class=\"icon-asterisk\" title=\"{{options.helperText}}\"></span> </div> </div> <div *ngIf=\"type === 'radio'\"> <label class=\"radio radio--alt\" *ngFor=\"let item of items\"> <input type=\"radio\" [value]=\"item['value']\" [(ngModel)]=\"model\" (ngModelChange)=\"onChange()\"> <span class=\"radio__input\"></span> <span class=\"radio__label\">{{item['name']}}</span> </label> <div class=\"clearfix\"></div> </div> <div *ngIf=\"type === 'checkbox'\"> <label class=\"checkbox\" *ngFor=\"let item of items\"> <input type=\"checkbox\" [(ngModel)]=\"item['selected']\" (ngModelChange)=\"onChange()\"> <span class=\"checkbox__input\"></span> <span class=\"checkbox__label\">{{item['name']}}</span> </label> </div> <div *ngIf=\"options.helperText && (!errorMessage || !model)\" class=\"help-block text-{{options.helperLevel}}\" (ngModelChange)=\"onChange()\"> <span [ngClass]=\"{'icon-exclamation-triangle': options.helperLevel === 'warning', 'icon-error': options.helperLevel === 'danger', 'icon-info-circle': options.helperLevel === 'info', 'icon-check': options.helperLevel === 'success'}\"></span> <span>{{options.helperText}}</span> </div> <div *ngIf=\"model && error && errorMessage\" class=\"help-block text-danger\"> <span class=\"icon-error\"></span> <span>{{errorMessage}}</span> </div> </div> <div *ngIf=\"options && model && options.maxLength && (type === 'text' || type === 'textarea')\"> <span class=\"pull-right half-margin-right text-muted\">{{maxLengthString}}</span> <div class=\"clearfix\"></div> </div> <label class=\"switch\" *ngIf=\"type === 'switch'\"> <input type=\"checkbox\" [(ngModel)]=\"model\" (ngModelChange)=\"onChange()\"> <span class=\"switch__input\"> <span class=\"{{options.leftIcon}}\" *ngIf=\"options.leftIcon\"></span> <span class=\"{{options.rightIcon}}\" *ngIf=\"options.rightIcon\"></span> </span> <span class=\"switch__label\" *ngIf=\"label\">{{label}}</span> </label>","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":24,"character":12},"useExisting":{"__symbolic":"reference","name":"CuiInputComponent"},"multi":true}]}]}],"members":{"model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":2}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":2}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":2}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":2}}]}],"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":2}}]}],"modelChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":61,"character":2}}]}],"inputElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":72,"character":2},"arguments":["inputFocus"]}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"hasError":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}]}}}}]